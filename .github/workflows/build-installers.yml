name: Build installers

on:
  push:
    branches: [ "jon/development" ]
  workflow_dispatch:
    inputs:
      test-mode:
        description: 'Run in test mode (skip Nuitka build)'
        required: false
        default: 'false'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            venv-activate: source .venv/bin/activate
            nuitka-script: ../installers/nuitka_scripts/nuitka_installer_linux.sh
          - os: macos-latest
            venv-activate: source .venv/bin/activate
            nuitka-script: ../installers/nuitka_scripts/nuitka_installer_macos.sh
          - os: windows-latest
            venv-activate: .venv\\Scripts\\activate
            nuitka-script: ..\\installers\\nuitka_scripts\\nuitka_installer_windows.bat

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Make scripts executable (Unix)
        if: runner.os != 'Windows'
        run: chmod +x scripts/*.sh

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install uv
        run: pip install uv

      - name: Create venv and install dependencies
        run: |
          uv venv
          ${{ matrix.venv-activate }}
          uv sync
          pip install nuitka

      - name: Run test artifact generation (if test mode)
        if: ${{ github.event.inputs.test-mode == 'true' }}
        working-directory: skellycam-ui
        run: |
          touch skellycam_server.exe  # Unix
          if [ "$RUNNER_OS" == "Windows" ]; then
            echo "Dummy exe" > skellycam_server.exe
            mkdir -p release/0.0.1-test
            echo "Test installer" > release/0.0.1-test/skellycam_0.0.1-test_installer.exe
          else
            mkdir -p release/0.0.1-test
            touch release/0.0.1-test/skellycam_0.0.1-test_installer
          fi

      - name: Run nuitka build script (if not test mode)
        if: ${{ github.event.inputs.test-mode != 'true' }}
        working-directory: skellycam-ui
        shell: ${{ contains(matrix.os, 'windows') && 'cmd' || 'bash' }}
        run: |
          ${{ matrix.nuitka-script }}

      - name: Install UI dependencies
        working-directory: skellycam-ui
        run: npm install

      - name: Build UI
        working-directory: skellycam-ui
        run: npm run build

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: skellycam-${{ runner.os }}
          path: |
            skellycam-ui/skellycam_server*
            skellycam-ui/release/**/*-installer*
